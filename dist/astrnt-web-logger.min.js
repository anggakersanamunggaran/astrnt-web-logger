!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("astrnt-web-logger",[],n):"object"==typeof exports?exports["astrnt-web-logger"]=n():e["astrnt-web-logger"]=n()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function r(o){if(n[o])return n[o].exports;var t=n[o]={i:o,l:!1,exports:{}};return e[o].call(t.exports,t,t.exports,r),t.l=!0,t.exports}return r.m=e,r.c=n,r.d=function(e,n,o){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)r.d(o,t,function(n){return e[n]}.bind(null,t));return o},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,r){"use strict";r.r(n);var o=function(e,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";return new Promise(function(t,i){var s=new XMLHttpRequest;s.open(e,n,!0),s.setRequestHeader("Content-type","application/json;charset=UTF-8"),o&&s.overrideMimeType&&s.overrideMimeType(o),s.addEventListener("load",function(e){var n=e.target,r=JSON.parse(n.responseText),o=r.status||s.status;o>=200&&o<300?t(r.message||r):i(r.message||r)});var a=JSON.stringify(r);s.send(a)})},t=navigator.userAgent,i=navigator.appVersion,s=navigator.cookieEnabled,a=function(){var e="-",n="-",r=[{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}];for(var o in r){var s=r[o];if(s.r.test(t)){e=s.s;break}}switch(/Windows/.test(e)&&(n=/Windows (.*)/.exec(e)[1],e="Windows"),e){case"Mac OS X":n=/Mac OS X (10[\.\_\d]+)/.exec(t)[1];break;case"Android":n=/Android ([\.\_\d]+)/.exec(t)[1];break;case"iOS":n=(n=/OS (\d+)_(\d+)_?(\d+)?/.exec(i))[1]+"."+n[2]+"."+(0|n[3])}return{name:e,version:n}},d=function(){var e,n,r,o=parseInt(i,10),s=navigator.appName,a=""+parseFloat(navigator.appVersion);return-1!==(n=t.indexOf("Opera"))?(s="Opera",a=t.substring(n+6),-1!==(n=t.indexOf("Version"))&&(a=t.substring(n+8))):-1!==(n=t.indexOf("OPR"))?(s="Opera",a=t.substring(n+4)):-1!==(n=t.indexOf("Edge"))?(s="Microsoft Edge",a=t.substring(n+5)):-1!==(n=t.indexOf("MSIE"))?(s="Microsoft Internet Explorer",a=t.substring(n+5)):-1!==(n=t.indexOf("Chrome"))?(s="Chrome",a=t.substring(n+7)):-1!==(n=t.indexOf("Safari"))?(s="Safari",a=t.substring(n+7),-1!==(n=t.indexOf("Version"))&&(a=t.substring(n+8))):-1!==(n=t.indexOf("Firefox"))?(s="Firefox",a=t.substring(n+8)):-1!==t.indexOf("Trident/")?(s="Microsoft Internet Explorer",a=t.substring(t.indexOf("rv:")+3)):(e=t.lastIndexOf(" ")+1)<(n=t.lastIndexOf("/"))&&(s=t.substring(e,n),a=t.substring(n+1),s.toLowerCase()===s.toUpperCase()&&(s=navigator.appName)),-1!==(r=a.indexOf(""))&&(a=a.substring(0,r)),-1!==(r=a.indexOf(" "))&&(a=a.substring(0,r)),-1!==(r=a.indexOf(")"))&&(a=a.substring(0,r)),o=parseInt(""+a,10),isNaN(o)&&(a=""+parseFloat(i),o=parseInt(i,10)),{name:s||"",version:a||"",majorVersion:o||""}},c=function(){if(screen.width)return(screen.width?screen.width:"")+" x "+(screen.height?screen.height:"")},u=function(){return void 0===navigator.cookieEnabled&&!s&&(document.cookie="testcookie",-1!==document.cookie.indexOf("testcookie"))};r.d(n,"initialize",function(){return b}),r.d(n,"recordEvent",function(){return v}),r.d(n,"clearCache",function(){return O});var f="ASTRNT_LOG_ENV",g="ASTRNT_BASE_LOG_INFO",l=[f,g],p=function(){var e="";switch(localStorage.getItem(f)){case"beta":case"dev":e="beta";break;case"production":case"live":e="app"}var n="https://".concat(e,".astrnt.co");return"".concat(n,"/api/v2/candidate/logs")},w=function(e){var n,r,o,t,s,f,l,p,w,b=function(){var e=a(),n=d(),r=c(),o=/Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(i);return{screen:r,browser:n.name,browserVersion:n.version,browserMajorVersion:n.majorVersion,mobile:o,os:e.name,osVersion:e.version,cookies:u}}(),v=(new Date).getTimezoneOffset(),O=(n=new Date,r=new Date(n),o=""+(r.getMonth()+1),t=""+r.getDate(),s=r.getFullYear(),f=r.getHours(),l=r.getMinutes(),p=r.getSeconds(),o.length<2&&(o="0"+o),t.length<2&&(t="0"+t),f=(f%=12)||12,l=l<10?"0"+l:l,"".concat([s,o,t].join("-")," ").concat(f,":").concat(l,":").concat(p)),m=navigator.userAgent,S="".concat(b.os," (").concat(b.osVersion,")"),W="".concat(b.browser,", Version ").concat(b.browserVersion," (").concat(b.browserMajorVersion,")"),x=(w=localStorage.getItem(g),JSON.parse(w));return x.event=e.event||"",x.message=e.message||"",x.os=S,x.version=W,x.imei=m,x.log_time=O,x.time_zone=v,x};function b(e,n){var r={interviewCode:n.interview_code||"",candidate_id:n.candidate_id||0,job_id:n.job_id||0,company_id:n.company_id||0};localStorage.setItem(f,e),localStorage.setItem(g,JSON.stringify(r))}function v(e){var n=p(),r=w(e);return o("POST",n,{logs:[r]})}function O(){l.forEach(function(e){localStorage.removeItem(e)})}}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,